// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: services/InvoiceService.proto

#include "services/InvoiceService.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>

PROTOBUF_PRAGMA_INIT_SEG

namespace _pb = ::PROTOBUF_NAMESPACE_ID;
namespace _pbi = _pb::internal;

namespace gRPCTest {
namespace Protos {
namespace Services {
PROTOBUF_CONSTEXPR InvoiceByIdRequest::InvoiceByIdRequest(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.invoice_id_)*/int64_t{0}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct InvoiceByIdRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR InvoiceByIdRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~InvoiceByIdRequestDefaultTypeInternal() {}
  union {
    InvoiceByIdRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 InvoiceByIdRequestDefaultTypeInternal _InvoiceByIdRequest_default_instance_;
PROTOBUF_CONSTEXPR FetchInvoiceByDateRequest::FetchInvoiceByDateRequest(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.date_)*/nullptr
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct FetchInvoiceByDateRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR FetchInvoiceByDateRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~FetchInvoiceByDateRequestDefaultTypeInternal() {}
  union {
    FetchInvoiceByDateRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 FetchInvoiceByDateRequestDefaultTypeInternal _FetchInvoiceByDateRequest_default_instance_;
PROTOBUF_CONSTEXPR RegisterInvoiceResponse::RegisterInvoiceResponse(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.invoice_)*/nullptr
  , /*decltype(_impl_.error_status_)*/nullptr
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct RegisterInvoiceResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR RegisterInvoiceResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~RegisterInvoiceResponseDefaultTypeInternal() {}
  union {
    RegisterInvoiceResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 RegisterInvoiceResponseDefaultTypeInternal _RegisterInvoiceResponse_default_instance_;
PROTOBUF_CONSTEXPR FetchInvoiceByIdResponse::FetchInvoiceByIdResponse(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.invoice_)*/nullptr
  , /*decltype(_impl_.error_status_)*/nullptr
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct FetchInvoiceByIdResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR FetchInvoiceByIdResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~FetchInvoiceByIdResponseDefaultTypeInternal() {}
  union {
    FetchInvoiceByIdResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 FetchInvoiceByIdResponseDefaultTypeInternal _FetchInvoiceByIdResponse_default_instance_;
PROTOBUF_CONSTEXPR FetchInvoiceByDateResponse::FetchInvoiceByDateResponse(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.invoice_)*/nullptr
  , /*decltype(_impl_.error_status_)*/nullptr
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct FetchInvoiceByDateResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR FetchInvoiceByDateResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~FetchInvoiceByDateResponseDefaultTypeInternal() {}
  union {
    FetchInvoiceByDateResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 FetchInvoiceByDateResponseDefaultTypeInternal _FetchInvoiceByDateResponse_default_instance_;
PROTOBUF_CONSTEXPR FetchInvoiceDetailsResponse::FetchInvoiceDetailsResponse(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.invoice_details_)*/nullptr
  , /*decltype(_impl_.error_status_)*/nullptr
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct FetchInvoiceDetailsResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR FetchInvoiceDetailsResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~FetchInvoiceDetailsResponseDefaultTypeInternal() {}
  union {
    FetchInvoiceDetailsResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 FetchInvoiceDetailsResponseDefaultTypeInternal _FetchInvoiceDetailsResponse_default_instance_;
PROTOBUF_CONSTEXPR FetchInvoicesResponse::FetchInvoicesResponse(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.invoices_)*/{}
  , /*decltype(_impl_.error_status_)*/nullptr
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct FetchInvoicesResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR FetchInvoicesResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~FetchInvoicesResponseDefaultTypeInternal() {}
  union {
    FetchInvoicesResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 FetchInvoicesResponseDefaultTypeInternal _FetchInvoicesResponse_default_instance_;
}  // namespace Services
}  // namespace Protos
}  // namespace gRPCTest
static ::_pb::Metadata file_level_metadata_services_2fInvoiceService_2eproto[7];
static constexpr ::_pb::EnumDescriptor const** file_level_enum_descriptors_services_2fInvoiceService_2eproto = nullptr;
static constexpr ::_pb::ServiceDescriptor const** file_level_service_descriptors_services_2fInvoiceService_2eproto = nullptr;

const uint32_t TableStruct_services_2fInvoiceService_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::gRPCTest::Protos::Services::InvoiceByIdRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::gRPCTest::Protos::Services::InvoiceByIdRequest, _impl_.invoice_id_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::gRPCTest::Protos::Services::FetchInvoiceByDateRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::gRPCTest::Protos::Services::FetchInvoiceByDateRequest, _impl_.date_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::gRPCTest::Protos::Services::RegisterInvoiceResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::gRPCTest::Protos::Services::RegisterInvoiceResponse, _impl_.invoice_),
  PROTOBUF_FIELD_OFFSET(::gRPCTest::Protos::Services::RegisterInvoiceResponse, _impl_.error_status_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::gRPCTest::Protos::Services::FetchInvoiceByIdResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::gRPCTest::Protos::Services::FetchInvoiceByIdResponse, _impl_.invoice_),
  PROTOBUF_FIELD_OFFSET(::gRPCTest::Protos::Services::FetchInvoiceByIdResponse, _impl_.error_status_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::gRPCTest::Protos::Services::FetchInvoiceByDateResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::gRPCTest::Protos::Services::FetchInvoiceByDateResponse, _impl_.invoice_),
  PROTOBUF_FIELD_OFFSET(::gRPCTest::Protos::Services::FetchInvoiceByDateResponse, _impl_.error_status_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::gRPCTest::Protos::Services::FetchInvoiceDetailsResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::gRPCTest::Protos::Services::FetchInvoiceDetailsResponse, _impl_.invoice_details_),
  PROTOBUF_FIELD_OFFSET(::gRPCTest::Protos::Services::FetchInvoiceDetailsResponse, _impl_.error_status_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::gRPCTest::Protos::Services::FetchInvoicesResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::gRPCTest::Protos::Services::FetchInvoicesResponse, _impl_.invoices_),
  PROTOBUF_FIELD_OFFSET(::gRPCTest::Protos::Services::FetchInvoicesResponse, _impl_.error_status_),
};
static const ::_pbi::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, -1, sizeof(::gRPCTest::Protos::Services::InvoiceByIdRequest)},
  { 7, -1, -1, sizeof(::gRPCTest::Protos::Services::FetchInvoiceByDateRequest)},
  { 14, -1, -1, sizeof(::gRPCTest::Protos::Services::RegisterInvoiceResponse)},
  { 22, -1, -1, sizeof(::gRPCTest::Protos::Services::FetchInvoiceByIdResponse)},
  { 30, -1, -1, sizeof(::gRPCTest::Protos::Services::FetchInvoiceByDateResponse)},
  { 38, -1, -1, sizeof(::gRPCTest::Protos::Services::FetchInvoiceDetailsResponse)},
  { 46, -1, -1, sizeof(::gRPCTest::Protos::Services::FetchInvoicesResponse)},
};

static const ::_pb::Message* const file_default_instances[] = {
  &::gRPCTest::Protos::Services::_InvoiceByIdRequest_default_instance_._instance,
  &::gRPCTest::Protos::Services::_FetchInvoiceByDateRequest_default_instance_._instance,
  &::gRPCTest::Protos::Services::_RegisterInvoiceResponse_default_instance_._instance,
  &::gRPCTest::Protos::Services::_FetchInvoiceByIdResponse_default_instance_._instance,
  &::gRPCTest::Protos::Services::_FetchInvoiceByDateResponse_default_instance_._instance,
  &::gRPCTest::Protos::Services::_FetchInvoiceDetailsResponse_default_instance_._instance,
  &::gRPCTest::Protos::Services::_FetchInvoicesResponse_default_instance_._instance,
};

const char descriptor_table_protodef_services_2fInvoiceService_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n\035services/InvoiceService.proto\022\030gRPCTes"
  "t.Protos.Services\032\037google/protobuf/times"
  "tamp.proto\032\033google/protobuf/empty.proto\032"
  "\024models/Invoice.proto\032\033models/InvoiceDet"
  "ails.proto\032\032common/ServiceStatus.proto\"("
  "\n\022InvoiceByIdRequest\022\022\n\ninvoice_id\030\001 \001(\003"
  "\"E\n\031FetchInvoiceByDateRequest\022(\n\004date\030\001 "
  "\001(\0132\032.google.protobuf.Timestamp\"\212\001\n\027Regi"
  "sterInvoiceResponse\0220\n\007invoice\030\001 \001(\0132\037.g"
  "RPCTest.Protos.Models.Invoice\022=\n\014error_s"
  "tatus\030\002 \001(\0132\'.gRPCTest.Protos.Services.S"
  "erviceStatus\"\213\001\n\030FetchInvoiceByIdRespons"
  "e\0220\n\007invoice\030\001 \001(\0132\037.gRPCTest.Protos.Mod"
  "els.Invoice\022=\n\014error_status\030\002 \001(\0132\'.gRPC"
  "Test.Protos.Services.ServiceStatus\"\215\001\n\032F"
  "etchInvoiceByDateResponse\0220\n\007invoice\030\001 \001"
  "(\0132\037.gRPCTest.Protos.Models.Invoice\022=\n\014e"
  "rror_status\030\002 \001(\0132\'.gRPCTest.Protos.Serv"
  "ices.ServiceStatus\"\235\001\n\033FetchInvoiceDetai"
  "lsResponse\022\?\n\017invoice_details\030\001 \001(\0132&.gR"
  "PCTest.Protos.Models.InvoiceDetails\022=\n\014e"
  "rror_status\030\002 \001(\0132\'.gRPCTest.Protos.Serv"
  "ices.ServiceStatus\"\211\001\n\025FetchInvoicesResp"
  "onse\0221\n\010invoices\030\001 \003(\0132\037.gRPCTest.Protos"
  ".Models.Invoice\022=\n\014error_status\030\002 \001(\0132\'."
  "gRPCTest.Protos.Services.ServiceStatus2\317"
  "\004\n\016InvoiceService\022g\n\017RegisterInvoice\022\037.g"
  "RPCTest.Protos.Models.Invoice\0321.gRPCTest"
  ".Protos.Services.RegisterInvoiceResponse"
  "\"\000\022v\n\020FetchInvoiceById\022,.gRPCTest.Protos"
  ".Services.InvoiceByIdRequest\0322.gRPCTest."
  "Protos.Services.FetchInvoiceByIdResponse"
  "\"\000\022\201\001\n\022FetchInvoiceByDate\0223.gRPCTest.Pro"
  "tos.Services.FetchInvoiceByDateRequest\0324"
  ".gRPCTest.Protos.Services.FetchInvoiceBy"
  "DateResponse\"\000\022|\n\023FetchInvoiceDetails\022,."
  "gRPCTest.Protos.Services.InvoiceByIdRequ"
  "est\0325.gRPCTest.Protos.Services.FetchInvo"
  "iceDetailsResponse\"\000\022Z\n\rFetchInvoices\022\026."
  "google.protobuf.Empty\032/.gRPCTest.Protos."
  "Services.FetchInvoicesResponse\"\000b\006proto3"
  ;
static const ::_pbi::DescriptorTable* const descriptor_table_services_2fInvoiceService_2eproto_deps[5] = {
  &::descriptor_table_common_2fServiceStatus_2eproto,
  &::descriptor_table_google_2fprotobuf_2fempty_2eproto,
  &::descriptor_table_google_2fprotobuf_2ftimestamp_2eproto,
  &::descriptor_table_models_2fInvoice_2eproto,
  &::descriptor_table_models_2fInvoiceDetails_2eproto,
};
static ::_pbi::once_flag descriptor_table_services_2fInvoiceService_2eproto_once;
const ::_pbi::DescriptorTable descriptor_table_services_2fInvoiceService_2eproto = {
    false, false, 1640, descriptor_table_protodef_services_2fInvoiceService_2eproto,
    "services/InvoiceService.proto",
    &descriptor_table_services_2fInvoiceService_2eproto_once, descriptor_table_services_2fInvoiceService_2eproto_deps, 5, 7,
    schemas, file_default_instances, TableStruct_services_2fInvoiceService_2eproto::offsets,
    file_level_metadata_services_2fInvoiceService_2eproto, file_level_enum_descriptors_services_2fInvoiceService_2eproto,
    file_level_service_descriptors_services_2fInvoiceService_2eproto,
};
PROTOBUF_ATTRIBUTE_WEAK const ::_pbi::DescriptorTable* descriptor_table_services_2fInvoiceService_2eproto_getter() {
  return &descriptor_table_services_2fInvoiceService_2eproto;
}

// Force running AddDescriptors() at dynamic initialization time.
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 static ::_pbi::AddDescriptorsRunner dynamic_init_dummy_services_2fInvoiceService_2eproto(&descriptor_table_services_2fInvoiceService_2eproto);
namespace gRPCTest {
namespace Protos {
namespace Services {

// ===================================================================

class InvoiceByIdRequest::_Internal {
 public:
};

InvoiceByIdRequest::InvoiceByIdRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:gRPCTest.Protos.Services.InvoiceByIdRequest)
}
InvoiceByIdRequest::InvoiceByIdRequest(const InvoiceByIdRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  InvoiceByIdRequest* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.invoice_id_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _this->_impl_.invoice_id_ = from._impl_.invoice_id_;
  // @@protoc_insertion_point(copy_constructor:gRPCTest.Protos.Services.InvoiceByIdRequest)
}

inline void InvoiceByIdRequest::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.invoice_id_){int64_t{0}}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

InvoiceByIdRequest::~InvoiceByIdRequest() {
  // @@protoc_insertion_point(destructor:gRPCTest.Protos.Services.InvoiceByIdRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void InvoiceByIdRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void InvoiceByIdRequest::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void InvoiceByIdRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:gRPCTest.Protos.Services.InvoiceByIdRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.invoice_id_ = int64_t{0};
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* InvoiceByIdRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int64 invoice_id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.invoice_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* InvoiceByIdRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:gRPCTest.Protos.Services.InvoiceByIdRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 invoice_id = 1;
  if (this->_internal_invoice_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt64ToArray(1, this->_internal_invoice_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:gRPCTest.Protos.Services.InvoiceByIdRequest)
  return target;
}

size_t InvoiceByIdRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:gRPCTest.Protos.Services.InvoiceByIdRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int64 invoice_id = 1;
  if (this->_internal_invoice_id() != 0) {
    total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(this->_internal_invoice_id());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData InvoiceByIdRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    InvoiceByIdRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*InvoiceByIdRequest::GetClassData() const { return &_class_data_; }


void InvoiceByIdRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<InvoiceByIdRequest*>(&to_msg);
  auto& from = static_cast<const InvoiceByIdRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:gRPCTest.Protos.Services.InvoiceByIdRequest)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_invoice_id() != 0) {
    _this->_internal_set_invoice_id(from._internal_invoice_id());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void InvoiceByIdRequest::CopyFrom(const InvoiceByIdRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:gRPCTest.Protos.Services.InvoiceByIdRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool InvoiceByIdRequest::IsInitialized() const {
  return true;
}

void InvoiceByIdRequest::InternalSwap(InvoiceByIdRequest* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_.invoice_id_, other->_impl_.invoice_id_);
}

::PROTOBUF_NAMESPACE_ID::Metadata InvoiceByIdRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_services_2fInvoiceService_2eproto_getter, &descriptor_table_services_2fInvoiceService_2eproto_once,
      file_level_metadata_services_2fInvoiceService_2eproto[0]);
}

// ===================================================================

class FetchInvoiceByDateRequest::_Internal {
 public:
  static const ::PROTOBUF_NAMESPACE_ID::Timestamp& date(const FetchInvoiceByDateRequest* msg);
};

const ::PROTOBUF_NAMESPACE_ID::Timestamp&
FetchInvoiceByDateRequest::_Internal::date(const FetchInvoiceByDateRequest* msg) {
  return *msg->_impl_.date_;
}
void FetchInvoiceByDateRequest::clear_date() {
  if (GetArenaForAllocation() == nullptr && _impl_.date_ != nullptr) {
    delete _impl_.date_;
  }
  _impl_.date_ = nullptr;
}
FetchInvoiceByDateRequest::FetchInvoiceByDateRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:gRPCTest.Protos.Services.FetchInvoiceByDateRequest)
}
FetchInvoiceByDateRequest::FetchInvoiceByDateRequest(const FetchInvoiceByDateRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  FetchInvoiceByDateRequest* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.date_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_date()) {
    _this->_impl_.date_ = new ::PROTOBUF_NAMESPACE_ID::Timestamp(*from._impl_.date_);
  }
  // @@protoc_insertion_point(copy_constructor:gRPCTest.Protos.Services.FetchInvoiceByDateRequest)
}

inline void FetchInvoiceByDateRequest::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.date_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

FetchInvoiceByDateRequest::~FetchInvoiceByDateRequest() {
  // @@protoc_insertion_point(destructor:gRPCTest.Protos.Services.FetchInvoiceByDateRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void FetchInvoiceByDateRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete _impl_.date_;
}

void FetchInvoiceByDateRequest::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void FetchInvoiceByDateRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:gRPCTest.Protos.Services.FetchInvoiceByDateRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaForAllocation() == nullptr && _impl_.date_ != nullptr) {
    delete _impl_.date_;
  }
  _impl_.date_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* FetchInvoiceByDateRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .google.protobuf.Timestamp date = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_date(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* FetchInvoiceByDateRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:gRPCTest.Protos.Services.FetchInvoiceByDateRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.protobuf.Timestamp date = 1;
  if (this->_internal_has_date()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::date(this),
        _Internal::date(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:gRPCTest.Protos.Services.FetchInvoiceByDateRequest)
  return target;
}

size_t FetchInvoiceByDateRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:gRPCTest.Protos.Services.FetchInvoiceByDateRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .google.protobuf.Timestamp date = 1;
  if (this->_internal_has_date()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.date_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData FetchInvoiceByDateRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    FetchInvoiceByDateRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*FetchInvoiceByDateRequest::GetClassData() const { return &_class_data_; }


void FetchInvoiceByDateRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<FetchInvoiceByDateRequest*>(&to_msg);
  auto& from = static_cast<const FetchInvoiceByDateRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:gRPCTest.Protos.Services.FetchInvoiceByDateRequest)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_date()) {
    _this->_internal_mutable_date()->::PROTOBUF_NAMESPACE_ID::Timestamp::MergeFrom(
        from._internal_date());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void FetchInvoiceByDateRequest::CopyFrom(const FetchInvoiceByDateRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:gRPCTest.Protos.Services.FetchInvoiceByDateRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool FetchInvoiceByDateRequest::IsInitialized() const {
  return true;
}

void FetchInvoiceByDateRequest::InternalSwap(FetchInvoiceByDateRequest* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_.date_, other->_impl_.date_);
}

::PROTOBUF_NAMESPACE_ID::Metadata FetchInvoiceByDateRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_services_2fInvoiceService_2eproto_getter, &descriptor_table_services_2fInvoiceService_2eproto_once,
      file_level_metadata_services_2fInvoiceService_2eproto[1]);
}

// ===================================================================

class RegisterInvoiceResponse::_Internal {
 public:
  static const ::gRPCTest::Protos::Models::Invoice& invoice(const RegisterInvoiceResponse* msg);
  static const ::gRPCTest::Protos::Services::ServiceStatus& error_status(const RegisterInvoiceResponse* msg);
};

const ::gRPCTest::Protos::Models::Invoice&
RegisterInvoiceResponse::_Internal::invoice(const RegisterInvoiceResponse* msg) {
  return *msg->_impl_.invoice_;
}
const ::gRPCTest::Protos::Services::ServiceStatus&
RegisterInvoiceResponse::_Internal::error_status(const RegisterInvoiceResponse* msg) {
  return *msg->_impl_.error_status_;
}
void RegisterInvoiceResponse::clear_invoice() {
  if (GetArenaForAllocation() == nullptr && _impl_.invoice_ != nullptr) {
    delete _impl_.invoice_;
  }
  _impl_.invoice_ = nullptr;
}
void RegisterInvoiceResponse::clear_error_status() {
  if (GetArenaForAllocation() == nullptr && _impl_.error_status_ != nullptr) {
    delete _impl_.error_status_;
  }
  _impl_.error_status_ = nullptr;
}
RegisterInvoiceResponse::RegisterInvoiceResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:gRPCTest.Protos.Services.RegisterInvoiceResponse)
}
RegisterInvoiceResponse::RegisterInvoiceResponse(const RegisterInvoiceResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  RegisterInvoiceResponse* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.invoice_){nullptr}
    , decltype(_impl_.error_status_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_invoice()) {
    _this->_impl_.invoice_ = new ::gRPCTest::Protos::Models::Invoice(*from._impl_.invoice_);
  }
  if (from._internal_has_error_status()) {
    _this->_impl_.error_status_ = new ::gRPCTest::Protos::Services::ServiceStatus(*from._impl_.error_status_);
  }
  // @@protoc_insertion_point(copy_constructor:gRPCTest.Protos.Services.RegisterInvoiceResponse)
}

inline void RegisterInvoiceResponse::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.invoice_){nullptr}
    , decltype(_impl_.error_status_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

RegisterInvoiceResponse::~RegisterInvoiceResponse() {
  // @@protoc_insertion_point(destructor:gRPCTest.Protos.Services.RegisterInvoiceResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void RegisterInvoiceResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete _impl_.invoice_;
  if (this != internal_default_instance()) delete _impl_.error_status_;
}

void RegisterInvoiceResponse::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void RegisterInvoiceResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:gRPCTest.Protos.Services.RegisterInvoiceResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaForAllocation() == nullptr && _impl_.invoice_ != nullptr) {
    delete _impl_.invoice_;
  }
  _impl_.invoice_ = nullptr;
  if (GetArenaForAllocation() == nullptr && _impl_.error_status_ != nullptr) {
    delete _impl_.error_status_;
  }
  _impl_.error_status_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* RegisterInvoiceResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .gRPCTest.Protos.Models.Invoice invoice = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_invoice(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .gRPCTest.Protos.Services.ServiceStatus error_status = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_error_status(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* RegisterInvoiceResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:gRPCTest.Protos.Services.RegisterInvoiceResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .gRPCTest.Protos.Models.Invoice invoice = 1;
  if (this->_internal_has_invoice()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::invoice(this),
        _Internal::invoice(this).GetCachedSize(), target, stream);
  }

  // .gRPCTest.Protos.Services.ServiceStatus error_status = 2;
  if (this->_internal_has_error_status()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, _Internal::error_status(this),
        _Internal::error_status(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:gRPCTest.Protos.Services.RegisterInvoiceResponse)
  return target;
}

size_t RegisterInvoiceResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:gRPCTest.Protos.Services.RegisterInvoiceResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .gRPCTest.Protos.Models.Invoice invoice = 1;
  if (this->_internal_has_invoice()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.invoice_);
  }

  // .gRPCTest.Protos.Services.ServiceStatus error_status = 2;
  if (this->_internal_has_error_status()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.error_status_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData RegisterInvoiceResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    RegisterInvoiceResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*RegisterInvoiceResponse::GetClassData() const { return &_class_data_; }


void RegisterInvoiceResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<RegisterInvoiceResponse*>(&to_msg);
  auto& from = static_cast<const RegisterInvoiceResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:gRPCTest.Protos.Services.RegisterInvoiceResponse)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_invoice()) {
    _this->_internal_mutable_invoice()->::gRPCTest::Protos::Models::Invoice::MergeFrom(
        from._internal_invoice());
  }
  if (from._internal_has_error_status()) {
    _this->_internal_mutable_error_status()->::gRPCTest::Protos::Services::ServiceStatus::MergeFrom(
        from._internal_error_status());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void RegisterInvoiceResponse::CopyFrom(const RegisterInvoiceResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:gRPCTest.Protos.Services.RegisterInvoiceResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RegisterInvoiceResponse::IsInitialized() const {
  return true;
}

void RegisterInvoiceResponse::InternalSwap(RegisterInvoiceResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(RegisterInvoiceResponse, _impl_.error_status_)
      + sizeof(RegisterInvoiceResponse::_impl_.error_status_)
      - PROTOBUF_FIELD_OFFSET(RegisterInvoiceResponse, _impl_.invoice_)>(
          reinterpret_cast<char*>(&_impl_.invoice_),
          reinterpret_cast<char*>(&other->_impl_.invoice_));
}

::PROTOBUF_NAMESPACE_ID::Metadata RegisterInvoiceResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_services_2fInvoiceService_2eproto_getter, &descriptor_table_services_2fInvoiceService_2eproto_once,
      file_level_metadata_services_2fInvoiceService_2eproto[2]);
}

// ===================================================================

class FetchInvoiceByIdResponse::_Internal {
 public:
  static const ::gRPCTest::Protos::Models::Invoice& invoice(const FetchInvoiceByIdResponse* msg);
  static const ::gRPCTest::Protos::Services::ServiceStatus& error_status(const FetchInvoiceByIdResponse* msg);
};

const ::gRPCTest::Protos::Models::Invoice&
FetchInvoiceByIdResponse::_Internal::invoice(const FetchInvoiceByIdResponse* msg) {
  return *msg->_impl_.invoice_;
}
const ::gRPCTest::Protos::Services::ServiceStatus&
FetchInvoiceByIdResponse::_Internal::error_status(const FetchInvoiceByIdResponse* msg) {
  return *msg->_impl_.error_status_;
}
void FetchInvoiceByIdResponse::clear_invoice() {
  if (GetArenaForAllocation() == nullptr && _impl_.invoice_ != nullptr) {
    delete _impl_.invoice_;
  }
  _impl_.invoice_ = nullptr;
}
void FetchInvoiceByIdResponse::clear_error_status() {
  if (GetArenaForAllocation() == nullptr && _impl_.error_status_ != nullptr) {
    delete _impl_.error_status_;
  }
  _impl_.error_status_ = nullptr;
}
FetchInvoiceByIdResponse::FetchInvoiceByIdResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:gRPCTest.Protos.Services.FetchInvoiceByIdResponse)
}
FetchInvoiceByIdResponse::FetchInvoiceByIdResponse(const FetchInvoiceByIdResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  FetchInvoiceByIdResponse* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.invoice_){nullptr}
    , decltype(_impl_.error_status_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_invoice()) {
    _this->_impl_.invoice_ = new ::gRPCTest::Protos::Models::Invoice(*from._impl_.invoice_);
  }
  if (from._internal_has_error_status()) {
    _this->_impl_.error_status_ = new ::gRPCTest::Protos::Services::ServiceStatus(*from._impl_.error_status_);
  }
  // @@protoc_insertion_point(copy_constructor:gRPCTest.Protos.Services.FetchInvoiceByIdResponse)
}

inline void FetchInvoiceByIdResponse::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.invoice_){nullptr}
    , decltype(_impl_.error_status_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

FetchInvoiceByIdResponse::~FetchInvoiceByIdResponse() {
  // @@protoc_insertion_point(destructor:gRPCTest.Protos.Services.FetchInvoiceByIdResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void FetchInvoiceByIdResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete _impl_.invoice_;
  if (this != internal_default_instance()) delete _impl_.error_status_;
}

void FetchInvoiceByIdResponse::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void FetchInvoiceByIdResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:gRPCTest.Protos.Services.FetchInvoiceByIdResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaForAllocation() == nullptr && _impl_.invoice_ != nullptr) {
    delete _impl_.invoice_;
  }
  _impl_.invoice_ = nullptr;
  if (GetArenaForAllocation() == nullptr && _impl_.error_status_ != nullptr) {
    delete _impl_.error_status_;
  }
  _impl_.error_status_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* FetchInvoiceByIdResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .gRPCTest.Protos.Models.Invoice invoice = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_invoice(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .gRPCTest.Protos.Services.ServiceStatus error_status = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_error_status(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* FetchInvoiceByIdResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:gRPCTest.Protos.Services.FetchInvoiceByIdResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .gRPCTest.Protos.Models.Invoice invoice = 1;
  if (this->_internal_has_invoice()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::invoice(this),
        _Internal::invoice(this).GetCachedSize(), target, stream);
  }

  // .gRPCTest.Protos.Services.ServiceStatus error_status = 2;
  if (this->_internal_has_error_status()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, _Internal::error_status(this),
        _Internal::error_status(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:gRPCTest.Protos.Services.FetchInvoiceByIdResponse)
  return target;
}

size_t FetchInvoiceByIdResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:gRPCTest.Protos.Services.FetchInvoiceByIdResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .gRPCTest.Protos.Models.Invoice invoice = 1;
  if (this->_internal_has_invoice()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.invoice_);
  }

  // .gRPCTest.Protos.Services.ServiceStatus error_status = 2;
  if (this->_internal_has_error_status()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.error_status_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData FetchInvoiceByIdResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    FetchInvoiceByIdResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*FetchInvoiceByIdResponse::GetClassData() const { return &_class_data_; }


void FetchInvoiceByIdResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<FetchInvoiceByIdResponse*>(&to_msg);
  auto& from = static_cast<const FetchInvoiceByIdResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:gRPCTest.Protos.Services.FetchInvoiceByIdResponse)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_invoice()) {
    _this->_internal_mutable_invoice()->::gRPCTest::Protos::Models::Invoice::MergeFrom(
        from._internal_invoice());
  }
  if (from._internal_has_error_status()) {
    _this->_internal_mutable_error_status()->::gRPCTest::Protos::Services::ServiceStatus::MergeFrom(
        from._internal_error_status());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void FetchInvoiceByIdResponse::CopyFrom(const FetchInvoiceByIdResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:gRPCTest.Protos.Services.FetchInvoiceByIdResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool FetchInvoiceByIdResponse::IsInitialized() const {
  return true;
}

void FetchInvoiceByIdResponse::InternalSwap(FetchInvoiceByIdResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(FetchInvoiceByIdResponse, _impl_.error_status_)
      + sizeof(FetchInvoiceByIdResponse::_impl_.error_status_)
      - PROTOBUF_FIELD_OFFSET(FetchInvoiceByIdResponse, _impl_.invoice_)>(
          reinterpret_cast<char*>(&_impl_.invoice_),
          reinterpret_cast<char*>(&other->_impl_.invoice_));
}

::PROTOBUF_NAMESPACE_ID::Metadata FetchInvoiceByIdResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_services_2fInvoiceService_2eproto_getter, &descriptor_table_services_2fInvoiceService_2eproto_once,
      file_level_metadata_services_2fInvoiceService_2eproto[3]);
}

// ===================================================================

class FetchInvoiceByDateResponse::_Internal {
 public:
  static const ::gRPCTest::Protos::Models::Invoice& invoice(const FetchInvoiceByDateResponse* msg);
  static const ::gRPCTest::Protos::Services::ServiceStatus& error_status(const FetchInvoiceByDateResponse* msg);
};

const ::gRPCTest::Protos::Models::Invoice&
FetchInvoiceByDateResponse::_Internal::invoice(const FetchInvoiceByDateResponse* msg) {
  return *msg->_impl_.invoice_;
}
const ::gRPCTest::Protos::Services::ServiceStatus&
FetchInvoiceByDateResponse::_Internal::error_status(const FetchInvoiceByDateResponse* msg) {
  return *msg->_impl_.error_status_;
}
void FetchInvoiceByDateResponse::clear_invoice() {
  if (GetArenaForAllocation() == nullptr && _impl_.invoice_ != nullptr) {
    delete _impl_.invoice_;
  }
  _impl_.invoice_ = nullptr;
}
void FetchInvoiceByDateResponse::clear_error_status() {
  if (GetArenaForAllocation() == nullptr && _impl_.error_status_ != nullptr) {
    delete _impl_.error_status_;
  }
  _impl_.error_status_ = nullptr;
}
FetchInvoiceByDateResponse::FetchInvoiceByDateResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:gRPCTest.Protos.Services.FetchInvoiceByDateResponse)
}
FetchInvoiceByDateResponse::FetchInvoiceByDateResponse(const FetchInvoiceByDateResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  FetchInvoiceByDateResponse* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.invoice_){nullptr}
    , decltype(_impl_.error_status_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_invoice()) {
    _this->_impl_.invoice_ = new ::gRPCTest::Protos::Models::Invoice(*from._impl_.invoice_);
  }
  if (from._internal_has_error_status()) {
    _this->_impl_.error_status_ = new ::gRPCTest::Protos::Services::ServiceStatus(*from._impl_.error_status_);
  }
  // @@protoc_insertion_point(copy_constructor:gRPCTest.Protos.Services.FetchInvoiceByDateResponse)
}

inline void FetchInvoiceByDateResponse::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.invoice_){nullptr}
    , decltype(_impl_.error_status_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

FetchInvoiceByDateResponse::~FetchInvoiceByDateResponse() {
  // @@protoc_insertion_point(destructor:gRPCTest.Protos.Services.FetchInvoiceByDateResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void FetchInvoiceByDateResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete _impl_.invoice_;
  if (this != internal_default_instance()) delete _impl_.error_status_;
}

void FetchInvoiceByDateResponse::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void FetchInvoiceByDateResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:gRPCTest.Protos.Services.FetchInvoiceByDateResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaForAllocation() == nullptr && _impl_.invoice_ != nullptr) {
    delete _impl_.invoice_;
  }
  _impl_.invoice_ = nullptr;
  if (GetArenaForAllocation() == nullptr && _impl_.error_status_ != nullptr) {
    delete _impl_.error_status_;
  }
  _impl_.error_status_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* FetchInvoiceByDateResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .gRPCTest.Protos.Models.Invoice invoice = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_invoice(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .gRPCTest.Protos.Services.ServiceStatus error_status = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_error_status(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* FetchInvoiceByDateResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:gRPCTest.Protos.Services.FetchInvoiceByDateResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .gRPCTest.Protos.Models.Invoice invoice = 1;
  if (this->_internal_has_invoice()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::invoice(this),
        _Internal::invoice(this).GetCachedSize(), target, stream);
  }

  // .gRPCTest.Protos.Services.ServiceStatus error_status = 2;
  if (this->_internal_has_error_status()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, _Internal::error_status(this),
        _Internal::error_status(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:gRPCTest.Protos.Services.FetchInvoiceByDateResponse)
  return target;
}

size_t FetchInvoiceByDateResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:gRPCTest.Protos.Services.FetchInvoiceByDateResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .gRPCTest.Protos.Models.Invoice invoice = 1;
  if (this->_internal_has_invoice()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.invoice_);
  }

  // .gRPCTest.Protos.Services.ServiceStatus error_status = 2;
  if (this->_internal_has_error_status()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.error_status_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData FetchInvoiceByDateResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    FetchInvoiceByDateResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*FetchInvoiceByDateResponse::GetClassData() const { return &_class_data_; }


void FetchInvoiceByDateResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<FetchInvoiceByDateResponse*>(&to_msg);
  auto& from = static_cast<const FetchInvoiceByDateResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:gRPCTest.Protos.Services.FetchInvoiceByDateResponse)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_invoice()) {
    _this->_internal_mutable_invoice()->::gRPCTest::Protos::Models::Invoice::MergeFrom(
        from._internal_invoice());
  }
  if (from._internal_has_error_status()) {
    _this->_internal_mutable_error_status()->::gRPCTest::Protos::Services::ServiceStatus::MergeFrom(
        from._internal_error_status());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void FetchInvoiceByDateResponse::CopyFrom(const FetchInvoiceByDateResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:gRPCTest.Protos.Services.FetchInvoiceByDateResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool FetchInvoiceByDateResponse::IsInitialized() const {
  return true;
}

void FetchInvoiceByDateResponse::InternalSwap(FetchInvoiceByDateResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(FetchInvoiceByDateResponse, _impl_.error_status_)
      + sizeof(FetchInvoiceByDateResponse::_impl_.error_status_)
      - PROTOBUF_FIELD_OFFSET(FetchInvoiceByDateResponse, _impl_.invoice_)>(
          reinterpret_cast<char*>(&_impl_.invoice_),
          reinterpret_cast<char*>(&other->_impl_.invoice_));
}

::PROTOBUF_NAMESPACE_ID::Metadata FetchInvoiceByDateResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_services_2fInvoiceService_2eproto_getter, &descriptor_table_services_2fInvoiceService_2eproto_once,
      file_level_metadata_services_2fInvoiceService_2eproto[4]);
}

// ===================================================================

class FetchInvoiceDetailsResponse::_Internal {
 public:
  static const ::gRPCTest::Protos::Models::InvoiceDetails& invoice_details(const FetchInvoiceDetailsResponse* msg);
  static const ::gRPCTest::Protos::Services::ServiceStatus& error_status(const FetchInvoiceDetailsResponse* msg);
};

const ::gRPCTest::Protos::Models::InvoiceDetails&
FetchInvoiceDetailsResponse::_Internal::invoice_details(const FetchInvoiceDetailsResponse* msg) {
  return *msg->_impl_.invoice_details_;
}
const ::gRPCTest::Protos::Services::ServiceStatus&
FetchInvoiceDetailsResponse::_Internal::error_status(const FetchInvoiceDetailsResponse* msg) {
  return *msg->_impl_.error_status_;
}
void FetchInvoiceDetailsResponse::clear_invoice_details() {
  if (GetArenaForAllocation() == nullptr && _impl_.invoice_details_ != nullptr) {
    delete _impl_.invoice_details_;
  }
  _impl_.invoice_details_ = nullptr;
}
void FetchInvoiceDetailsResponse::clear_error_status() {
  if (GetArenaForAllocation() == nullptr && _impl_.error_status_ != nullptr) {
    delete _impl_.error_status_;
  }
  _impl_.error_status_ = nullptr;
}
FetchInvoiceDetailsResponse::FetchInvoiceDetailsResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:gRPCTest.Protos.Services.FetchInvoiceDetailsResponse)
}
FetchInvoiceDetailsResponse::FetchInvoiceDetailsResponse(const FetchInvoiceDetailsResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  FetchInvoiceDetailsResponse* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.invoice_details_){nullptr}
    , decltype(_impl_.error_status_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_invoice_details()) {
    _this->_impl_.invoice_details_ = new ::gRPCTest::Protos::Models::InvoiceDetails(*from._impl_.invoice_details_);
  }
  if (from._internal_has_error_status()) {
    _this->_impl_.error_status_ = new ::gRPCTest::Protos::Services::ServiceStatus(*from._impl_.error_status_);
  }
  // @@protoc_insertion_point(copy_constructor:gRPCTest.Protos.Services.FetchInvoiceDetailsResponse)
}

inline void FetchInvoiceDetailsResponse::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.invoice_details_){nullptr}
    , decltype(_impl_.error_status_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

FetchInvoiceDetailsResponse::~FetchInvoiceDetailsResponse() {
  // @@protoc_insertion_point(destructor:gRPCTest.Protos.Services.FetchInvoiceDetailsResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void FetchInvoiceDetailsResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete _impl_.invoice_details_;
  if (this != internal_default_instance()) delete _impl_.error_status_;
}

void FetchInvoiceDetailsResponse::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void FetchInvoiceDetailsResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:gRPCTest.Protos.Services.FetchInvoiceDetailsResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaForAllocation() == nullptr && _impl_.invoice_details_ != nullptr) {
    delete _impl_.invoice_details_;
  }
  _impl_.invoice_details_ = nullptr;
  if (GetArenaForAllocation() == nullptr && _impl_.error_status_ != nullptr) {
    delete _impl_.error_status_;
  }
  _impl_.error_status_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* FetchInvoiceDetailsResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .gRPCTest.Protos.Models.InvoiceDetails invoice_details = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_invoice_details(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .gRPCTest.Protos.Services.ServiceStatus error_status = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_error_status(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* FetchInvoiceDetailsResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:gRPCTest.Protos.Services.FetchInvoiceDetailsResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .gRPCTest.Protos.Models.InvoiceDetails invoice_details = 1;
  if (this->_internal_has_invoice_details()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::invoice_details(this),
        _Internal::invoice_details(this).GetCachedSize(), target, stream);
  }

  // .gRPCTest.Protos.Services.ServiceStatus error_status = 2;
  if (this->_internal_has_error_status()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, _Internal::error_status(this),
        _Internal::error_status(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:gRPCTest.Protos.Services.FetchInvoiceDetailsResponse)
  return target;
}

size_t FetchInvoiceDetailsResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:gRPCTest.Protos.Services.FetchInvoiceDetailsResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .gRPCTest.Protos.Models.InvoiceDetails invoice_details = 1;
  if (this->_internal_has_invoice_details()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.invoice_details_);
  }

  // .gRPCTest.Protos.Services.ServiceStatus error_status = 2;
  if (this->_internal_has_error_status()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.error_status_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData FetchInvoiceDetailsResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    FetchInvoiceDetailsResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*FetchInvoiceDetailsResponse::GetClassData() const { return &_class_data_; }


void FetchInvoiceDetailsResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<FetchInvoiceDetailsResponse*>(&to_msg);
  auto& from = static_cast<const FetchInvoiceDetailsResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:gRPCTest.Protos.Services.FetchInvoiceDetailsResponse)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_invoice_details()) {
    _this->_internal_mutable_invoice_details()->::gRPCTest::Protos::Models::InvoiceDetails::MergeFrom(
        from._internal_invoice_details());
  }
  if (from._internal_has_error_status()) {
    _this->_internal_mutable_error_status()->::gRPCTest::Protos::Services::ServiceStatus::MergeFrom(
        from._internal_error_status());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void FetchInvoiceDetailsResponse::CopyFrom(const FetchInvoiceDetailsResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:gRPCTest.Protos.Services.FetchInvoiceDetailsResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool FetchInvoiceDetailsResponse::IsInitialized() const {
  return true;
}

void FetchInvoiceDetailsResponse::InternalSwap(FetchInvoiceDetailsResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(FetchInvoiceDetailsResponse, _impl_.error_status_)
      + sizeof(FetchInvoiceDetailsResponse::_impl_.error_status_)
      - PROTOBUF_FIELD_OFFSET(FetchInvoiceDetailsResponse, _impl_.invoice_details_)>(
          reinterpret_cast<char*>(&_impl_.invoice_details_),
          reinterpret_cast<char*>(&other->_impl_.invoice_details_));
}

::PROTOBUF_NAMESPACE_ID::Metadata FetchInvoiceDetailsResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_services_2fInvoiceService_2eproto_getter, &descriptor_table_services_2fInvoiceService_2eproto_once,
      file_level_metadata_services_2fInvoiceService_2eproto[5]);
}

// ===================================================================

class FetchInvoicesResponse::_Internal {
 public:
  static const ::gRPCTest::Protos::Services::ServiceStatus& error_status(const FetchInvoicesResponse* msg);
};

const ::gRPCTest::Protos::Services::ServiceStatus&
FetchInvoicesResponse::_Internal::error_status(const FetchInvoicesResponse* msg) {
  return *msg->_impl_.error_status_;
}
void FetchInvoicesResponse::clear_invoices() {
  _impl_.invoices_.Clear();
}
void FetchInvoicesResponse::clear_error_status() {
  if (GetArenaForAllocation() == nullptr && _impl_.error_status_ != nullptr) {
    delete _impl_.error_status_;
  }
  _impl_.error_status_ = nullptr;
}
FetchInvoicesResponse::FetchInvoicesResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:gRPCTest.Protos.Services.FetchInvoicesResponse)
}
FetchInvoicesResponse::FetchInvoicesResponse(const FetchInvoicesResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  FetchInvoicesResponse* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.invoices_){from._impl_.invoices_}
    , decltype(_impl_.error_status_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_error_status()) {
    _this->_impl_.error_status_ = new ::gRPCTest::Protos::Services::ServiceStatus(*from._impl_.error_status_);
  }
  // @@protoc_insertion_point(copy_constructor:gRPCTest.Protos.Services.FetchInvoicesResponse)
}

inline void FetchInvoicesResponse::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.invoices_){arena}
    , decltype(_impl_.error_status_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

FetchInvoicesResponse::~FetchInvoicesResponse() {
  // @@protoc_insertion_point(destructor:gRPCTest.Protos.Services.FetchInvoicesResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void FetchInvoicesResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.invoices_.~RepeatedPtrField();
  if (this != internal_default_instance()) delete _impl_.error_status_;
}

void FetchInvoicesResponse::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void FetchInvoicesResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:gRPCTest.Protos.Services.FetchInvoicesResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.invoices_.Clear();
  if (GetArenaForAllocation() == nullptr && _impl_.error_status_ != nullptr) {
    delete _impl_.error_status_;
  }
  _impl_.error_status_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* FetchInvoicesResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // repeated .gRPCTest.Protos.Models.Invoice invoices = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_invoices(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else
          goto handle_unusual;
        continue;
      // .gRPCTest.Protos.Services.ServiceStatus error_status = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_error_status(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* FetchInvoicesResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:gRPCTest.Protos.Services.FetchInvoicesResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .gRPCTest.Protos.Models.Invoice invoices = 1;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_invoices_size()); i < n; i++) {
    const auto& repfield = this->_internal_invoices(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(1, repfield, repfield.GetCachedSize(), target, stream);
  }

  // .gRPCTest.Protos.Services.ServiceStatus error_status = 2;
  if (this->_internal_has_error_status()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, _Internal::error_status(this),
        _Internal::error_status(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:gRPCTest.Protos.Services.FetchInvoicesResponse)
  return target;
}

size_t FetchInvoicesResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:gRPCTest.Protos.Services.FetchInvoicesResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .gRPCTest.Protos.Models.Invoice invoices = 1;
  total_size += 1UL * this->_internal_invoices_size();
  for (const auto& msg : this->_impl_.invoices_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // .gRPCTest.Protos.Services.ServiceStatus error_status = 2;
  if (this->_internal_has_error_status()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.error_status_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData FetchInvoicesResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    FetchInvoicesResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*FetchInvoicesResponse::GetClassData() const { return &_class_data_; }


void FetchInvoicesResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<FetchInvoicesResponse*>(&to_msg);
  auto& from = static_cast<const FetchInvoicesResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:gRPCTest.Protos.Services.FetchInvoicesResponse)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.invoices_.MergeFrom(from._impl_.invoices_);
  if (from._internal_has_error_status()) {
    _this->_internal_mutable_error_status()->::gRPCTest::Protos::Services::ServiceStatus::MergeFrom(
        from._internal_error_status());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void FetchInvoicesResponse::CopyFrom(const FetchInvoicesResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:gRPCTest.Protos.Services.FetchInvoicesResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool FetchInvoicesResponse::IsInitialized() const {
  return true;
}

void FetchInvoicesResponse::InternalSwap(FetchInvoicesResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.invoices_.InternalSwap(&other->_impl_.invoices_);
  swap(_impl_.error_status_, other->_impl_.error_status_);
}

::PROTOBUF_NAMESPACE_ID::Metadata FetchInvoicesResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_services_2fInvoiceService_2eproto_getter, &descriptor_table_services_2fInvoiceService_2eproto_once,
      file_level_metadata_services_2fInvoiceService_2eproto[6]);
}

// @@protoc_insertion_point(namespace_scope)
}  // namespace Services
}  // namespace Protos
}  // namespace gRPCTest
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::gRPCTest::Protos::Services::InvoiceByIdRequest*
Arena::CreateMaybeMessage< ::gRPCTest::Protos::Services::InvoiceByIdRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::gRPCTest::Protos::Services::InvoiceByIdRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::gRPCTest::Protos::Services::FetchInvoiceByDateRequest*
Arena::CreateMaybeMessage< ::gRPCTest::Protos::Services::FetchInvoiceByDateRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::gRPCTest::Protos::Services::FetchInvoiceByDateRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::gRPCTest::Protos::Services::RegisterInvoiceResponse*
Arena::CreateMaybeMessage< ::gRPCTest::Protos::Services::RegisterInvoiceResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::gRPCTest::Protos::Services::RegisterInvoiceResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::gRPCTest::Protos::Services::FetchInvoiceByIdResponse*
Arena::CreateMaybeMessage< ::gRPCTest::Protos::Services::FetchInvoiceByIdResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::gRPCTest::Protos::Services::FetchInvoiceByIdResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::gRPCTest::Protos::Services::FetchInvoiceByDateResponse*
Arena::CreateMaybeMessage< ::gRPCTest::Protos::Services::FetchInvoiceByDateResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::gRPCTest::Protos::Services::FetchInvoiceByDateResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::gRPCTest::Protos::Services::FetchInvoiceDetailsResponse*
Arena::CreateMaybeMessage< ::gRPCTest::Protos::Services::FetchInvoiceDetailsResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::gRPCTest::Protos::Services::FetchInvoiceDetailsResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::gRPCTest::Protos::Services::FetchInvoicesResponse*
Arena::CreateMaybeMessage< ::gRPCTest::Protos::Services::FetchInvoicesResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::gRPCTest::Protos::Services::FetchInvoicesResponse >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
